{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAK7EDMDC6rhhoNcEGLs8SsQZqGtuw5xCc\",\n  authDomain: \"webshop-clothing-db.firebaseapp.com\",\n  projectId: \"webshop-clothing-db\",\n  storageBucket: \"webshop-clothing-db.appspot.com\",\n  messagingSenderId: \"247383754132\",\n  appId: \"1:247383754132:web:ef17a8751db51a2aecfb81\"\n};\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithGoogleRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n\n  // IF user does not exist\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('Error creating the user', error.message);\n    }\n  }\n\n  //Create/set the document with the data from userAuth from my collection\n  //If user data exists\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signAutInWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  console.log(email);\n  console.log(password);\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","console","log","exists","displayName","email","createAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signAutInWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/home/administrateur/hh-fcc/webshop-clothing/src/utils/firebase.utils.jsx"],"sourcesContent":["import {initializeApp} from 'firebase/app'\nimport {getAuth,signInWithRedirect,signInWithPopup,GoogleAuthProvider,\n  createUserWithEmailAndPassword,signInWithEmailAndPassword, signOut,onAuthStateChanged} from 'firebase/auth'\nimport {getFirestore, doc, getDoc,setDoc,collection,writeBatch} from 'firebase/firestore'\n\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAK7EDMDC6rhhoNcEGLs8SsQZqGtuw5xCc\",\n    authDomain: \"webshop-clothing-db.firebaseapp.com\",\n    projectId: \"webshop-clothing-db\",\n    storageBucket: \"webshop-clothing-db.appspot.com\",\n    messagingSenderId: \"247383754132\",\n    appId: \"1:247383754132:web:ef17a8751db51a2aecfb81\"\n  };\n  \n  \n  // Initialize Firebase\n  \n  const app = initializeApp(firebaseConfig);\n\n  const googleProvider = new GoogleAuthProvider()\n  googleProvider.setCustomParameters({\n    prompt: \"select_account\"\n  })\n\n  export const auth = getAuth()\n  export const signInWithGooglePopup = () => signInWithPopup(auth,googleProvider)\n  export const signInWithGoogleRedirect = () => signInWithGoogleRedirect(auth,googleProvider)\n\n  export const db = getFirestore()\n  export const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n    if (!userAuth) return\n    const userDocRef = doc(db, 'users', userAuth.uid)\n    const userSnapshot = await getDoc(userDocRef)\n    console.log(userSnapshot)\n\n    // IF user does not exist\n    if (!userSnapshot.exists()) {\n      const {displayName,email} = userAuth\n      const createAt = new Date()\n      \n      try {\n        await setDoc(userDocRef, {\n          displayName,\n          email,\n          createAt,\n          ...additionalInformation\n        })\n      } catch(error) {\n        console.log('Error creating the user', error.message)\n      }\n    }\n\n    //Create/set the document with the data from userAuth from my collection\n    //If user data exists\n\n    return userDocRef\n  }\n\n  export const createAuthUserWithEmailAndPassword = async (email,password) => {\n    if (!email || !password) return\n    return await createUserWithEmailAndPassword(auth,email,password)\n  }\n\n  export const signAutInWithEmailAndPassword = async (email,password) => {\n    if (!email || !password) return;\n    console.log(email)\n    console.log(password)\n    return await signInWithEmailAndPassword(auth, email, password);\n  }\n\n  export const  signOutUser = async  () =>  await signOut(auth);\n\n  export const onAuthStateChangedListener =  (callback) => onAuthStateChanged(auth,callback)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}